/*
 * Grid(ism)
 * A CSS grid experiment by @cobyism
 * https://github.com/cobyism/gridism
 */

/* Preserve some sanity */
.g, .u {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/* Horizontal padding (gutters!) */
.g .pad-h {
  padding-left: 10px;
  padding-right: 10px;
}

/* This ensures the outer gutters are equal to the (doubled) inner gutters. */
.g .pad-h:first-child { padding-left: 20px; }
.g .pad-h:last-child { padding-right: 20px; }

/* Vertical padding isn’t quite as complicated */
.g .pad-v {
  padding-top: 10px;
  padding-bottom: 10px;
}

/* Nested grids already have padding though, so let’s nuke it */
.u .pad-h:first-child { padding-left: 0px; }
.u .pad-h:last-child { padding-right: 0px; }
.pad-v .g:first-child .pad-v { padding-top: 0; }
.pad-v .g:last-child .pad-v { padding-bottom: 0; }

/* Wrapping at a maximum width is optional */
.wrap .g {
  max-width: 978px;
  margin: 0 auto;
}

/* Set up some rules to govern the grid */
.g {
  display: block;
  clear: both;
}
.g .u {
  float: left;
}

/* Width classes are numbered as fractions
 * For example: for a grid unit 1/3 (one third) of the parent width,
 * simply apply class="w-1-3" to the element. */
.g .w-1-1 { width: 100%; }
.g .w-1-2 { width: 50%; }
.g .w-1-3 { width: 33.3332%; }
.g .w-2-3 { width: 66.6665%; }
.g .w-g-s { width: 38.2716%; } /* Golden section: smaller piece */
.g .w-g-l { width: 61.7283%; } /* Golden section: larger piece */
.g .w-1-4 { width: 25%; }
.g .w-3-4 { width: 75%; }
.g .w-1-5 { width: 20%; }
.g .w-2-5 { width: 40%; }
.g .w-3-5 { width: 60%; }
.g .w-4-5 { width: 80%; }

@media screen and (max-width: 568px) {
  /* Stack anything that isn’t full-width on smaller screens */
  .g .w-1-2,
  .g .w-1-3,
  .g .w-2-3,
  .g .w-1-4,
  .g .w-3-4,
  .g .w-1-5,
  .g .w-2-5,
  .g .w-3-5,
  .g .w-4-5,
  .g .w-g-s,
  .g .w-g-l {
    width: 100%;
  }

  /* ... and give them some better margins */
  .g .pad-h {
    padding-left: 20px;
    padding-right: 20px;
  }
  .u .g .pad-h {
    padding-left: 0px;
    padding-right: 0px;
  }

  /* Sometimes, you want things centered on small screens */
  .center-on-mobiles {
    text-align: center !important;
  }
}

/* Expand the wrap a bit further on larger screens */
@media screen and (min-width: 1180px) {
  .wrap .g {
    max-width: 1180px;
    margin: 0 auto;
  }
}

/* Utility classes */
.align-center { text-align: center; }
.align-left   { text-align: left; }
.align-right  { text-align: right; }
